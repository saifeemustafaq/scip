{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 67, "column": 0}, "map": {"version":3,"sources":["file:///Users/mustafasaifee/Downloads/gh/scip/lib/sidebar-manager.ts"],"sourcesContent":["import fs from 'fs';\nimport path from 'path';\n\nexport interface SidebarItem {\n  id: string;\n  label: string;\n  path: string;\n  icon: string;\n  enabled: boolean;\n  order: number;\n}\n\nexport interface SidebarConfig {\n  items: SidebarItem[];\n}\n\nconst CONFIG_PATH = path.join(process.cwd(), 'lib', 'sidebar-config.json');\nconst PAGES_DIR = path.join(process.cwd(), 'app');\n\nexport class SidebarManager {\n  static async getConfig(): Promise<SidebarConfig> {\n    try {\n      const data = await fs.promises.readFile(CONFIG_PATH, 'utf-8');\n      return JSON.parse(data);\n    } catch (error) {\n      console.info('No sidebar config found, using default:', error);\n      // Return default config if file doesn't exist\n      return { items: [] };\n    }\n  }\n\n  static async saveConfig(config: SidebarConfig): Promise<void> {\n    await fs.promises.writeFile(CONFIG_PATH, JSON.stringify(config, null, 2));\n  }\n\n  static async addItem(item: Omit<SidebarItem, 'id' | 'order'>): Promise<SidebarItem> {\n    const config = await this.getConfig();\n    const newItem: SidebarItem = {\n      ...item,\n      id: item.label.toLowerCase().replace(/\\s+/g, '-'),\n      order: config.items.length + 1\n    };\n\n    config.items.push(newItem);\n    await this.saveConfig(config);\n    \n    // Create the route file\n    await this.createRouteFile(newItem);\n    \n    return newItem;\n  }\n\n  static async updateItem(id: string, updates: Partial<SidebarItem>): Promise<SidebarItem | null> {\n    const config = await this.getConfig();\n    const itemIndex = config.items.findIndex(item => item.id === id);\n    \n    if (itemIndex === -1) return null;\n    \n    const oldItem = { ...config.items[itemIndex] };\n    config.items[itemIndex] = { ...config.items[itemIndex], ...updates };\n    \n    await this.saveConfig(config);\n    \n    // If path or label changed, update route file\n    const pathChanged = updates.path && updates.path !== oldItem.path;\n    const labelChanged = updates.label && updates.label !== oldItem.label;\n    const iconChanged = updates.icon && updates.icon !== oldItem.icon;\n    \n    if (pathChanged || labelChanged || iconChanged) {\n      // Delete old route file if path changed\n      if (pathChanged) {\n        await this.deleteRouteFile(oldItem.path);\n      }\n      // Create/update route file with new data\n      await this.createRouteFile(config.items[itemIndex]);\n    }\n    \n    return config.items[itemIndex];\n  }\n\n  static async deleteItem(id: string): Promise<boolean> {\n    const config = await this.getConfig();\n    const itemIndex = config.items.findIndex(item => item.id === id);\n    \n    if (itemIndex === -1) return false;\n    \n    const item = config.items[itemIndex];\n    config.items.splice(itemIndex, 1);\n    \n    await this.saveConfig(config);\n    await this.deleteRouteFile(item.path);\n    \n    return true;\n  }\n\n  static async reorderItems(itemIds: string[]): Promise<void> {\n    const config = await this.getConfig();\n    const reorderedItems: SidebarItem[] = [];\n    \n    itemIds.forEach((id, index) => {\n      const item = config.items.find(item => item.id === id);\n      if (item) {\n        reorderedItems.push({ ...item, order: index + 1 });\n      }\n    });\n    \n    config.items = reorderedItems;\n    await this.saveConfig(config);\n  }\n\n  static async createRouteFile(item: SidebarItem): Promise<void> {\n    const routePath = item.path.startsWith('/') ? item.path.slice(1) : item.path;\n    const dirPath = path.join(PAGES_DIR, routePath);\n    const filePath = path.join(dirPath, 'page.tsx');\n\n    // Create directory if it doesn't exist\n    await fs.promises.mkdir(dirPath, { recursive: true });\n\n    // Create a valid component name by removing special characters and capitalizing\n    const componentName = item.label\n      .replace(/[^a-zA-Z0-9\\s]/g, '') // Remove special characters\n      .replace(/\\s+/g, ' ') // Normalize spaces\n      .split(' ')\n      .map(word => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase())\n      .join('') + 'Page';\n\n    // Get the icon component mapping\n    const getIconSvg = (iconName: string) => {\n      const iconSvgMap: { [key: string]: string } = {\n        home: '<svg className=\"w-8 h-8\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6\" /></svg>',\n        users: '<svg className=\"w-8 h-8\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197m13.5-9a4 4 0 11-8 0 4 4 0 018 0z\" /></svg>',\n        settings: '<svg className=\"w-8 h-8\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z\" /><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" /></svg>',\n        dashboard: '<svg className=\"w-8 h-8\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" /></svg>',\n        menu: '<svg className=\"w-8 h-8\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6h16M4 12h16M4 18h16\" /></svg>',\n        book: '<svg className=\"w-8 h-8\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.247 18 16.5 18c-1.746 0-3.332.477-4.5 1.253\" /></svg>',\n        mail: '<svg className=\"w-8 h-8\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\" /></svg>',\n        calendar: '<svg className=\"w-8 h-8\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\" /></svg>',\n        // Add more as needed, fallback to a generic icon\n      };\n      \n      return iconSvgMap[iconName] || '<svg className=\"w-8 h-8\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10\" /></svg>';\n    };\n\n    // Create page component\n    const pageContent = `export default function ${componentName}() {\n  return (\n    <div className=\"p-6\">\n      <div className=\"max-w-4xl mx-auto\">\n        <div className=\"mb-6\">\n          <h1 className=\"text-3xl font-bold text-gray-900 dark:text-white flex items-center gap-3\">\n            ${getIconSvg(item.icon)}\n            ${item.label}\n          </h1>\n          <p className=\"text-gray-600 dark:text-gray-400 mt-2\">\n            Welcome to the ${item.label} page. This page was automatically generated.\n          </p>\n        </div>\n        \n        <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700 p-6\">\n          <h2 className=\"text-xl font-semibold mb-4 text-gray-900 dark:text-white\">\n            ${item.label} Content\n          </h2>\n          <p className=\"text-gray-600 dark:text-gray-400\">\n            This is the ${item.label} page content. You can customize this page by editing the file at:\n          </p>\n          <code className=\"block mt-2 p-2 bg-gray-100 dark:bg-gray-700 rounded text-sm\">\n            app${item.path}/page.tsx\n          </code>\n        </div>\n      </div>\n    </div>\n  );\n}\n`;\n\n    await fs.promises.writeFile(filePath, pageContent);\n  }\n\n  static async deleteRouteFile(routePath: string): Promise<void> {\n    try {\n      const cleanPath = routePath.startsWith('/') ? routePath.slice(1) : routePath;\n      const dirPath = path.join(PAGES_DIR, cleanPath);\n      \n      // Remove the entire directory\n      await fs.promises.rm(dirPath, { recursive: true, force: true });\n    } catch (error) {\n      console.info('Error deleting route file (may not exist):', error);\n      // Ignore errors if file doesn't exist\n    }\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 235, "column": 0}, "map": {"version":3,"sources":["file:///Users/mustafasaifee/Downloads/gh/scip/app/api/sidebar/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport { SidebarManager } from '@/lib/sidebar-manager';\n\nexport async function GET() {\n  try {\n    const config = await SidebarManager.getConfig();\n    return NextResponse.json(config);\n  } catch (error) {\n    console.error('Failed to fetch sidebar configuration:', error);\n    return NextResponse.json(\n      { error: 'Failed to fetch sidebar configuration' },\n      { status: 500 }\n    );\n  }\n}\n\nexport async function POST(request: NextRequest) {\n  try {\n    const body = await request.json();\n    const { label, path, icon, enabled = true } = body;\n\n    if (!label || !path || !icon) {\n      return NextResponse.json(\n        { error: 'Missing required fields: label, path, icon' },\n        { status: 400 }\n      );\n    }\n\n    const newItem = await SidebarManager.addItem({\n      label,\n      path,\n      icon,\n      enabled\n    });\n\n    return NextResponse.json(newItem, { status: 201 });\n  } catch (error) {\n    console.error('Failed to create sidebar item:', error);\n    return NextResponse.json(\n      { error: 'Failed to create sidebar item' },\n      { status: 500 }\n    );\n  }\n}\n\nexport async function PUT(request: NextRequest) {\n  try {\n    const body = await request.json();\n    const { action, ...data } = body;\n\n    if (action === 'reorder') {\n      await SidebarManager.reorderItems(data.itemIds);\n      return NextResponse.json({ success: true });\n    }\n\n    const { id, ...updates } = data;\n    if (!id) {\n      return NextResponse.json(\n        { error: 'Missing item id' },\n        { status: 400 }\n      );\n    }\n\n    const updatedItem = await SidebarManager.updateItem(id, updates);\n    if (!updatedItem) {\n      return NextResponse.json(\n        { error: 'Item not found' },\n        { status: 404 }\n      );\n    }\n\n    return NextResponse.json(updatedItem);\n  } catch (error) {\n    console.error('Failed to update sidebar item:', error);\n    return NextResponse.json(\n      { error: 'Failed to update sidebar item' },\n      { status: 500 }\n    );\n  }\n}\n\nexport async function DELETE(request: NextRequest) {\n  try {\n    const { searchParams } = new URL(request.url);\n    const id = searchParams.get('id');\n\n    if (!id) {\n      return NextResponse.json(\n        { error: 'Missing item id' },\n        { status: 400 }\n      );\n    }\n\n    const deleted = await SidebarManager.deleteItem(id);\n    if (!deleted) {\n      return NextResponse.json(\n        { error: 'Item not found' },\n        { status: 404 }\n      );\n    }\n\n    return NextResponse.json({ success: true });\n  } catch (error) {\n    console.error('Failed to delete sidebar item:', error);\n    return NextResponse.json(\n      { error: 'Failed to delete sidebar item' },\n      { status: 500 }\n    );\n  }\n}\n"],"names":[],"mappings":";;;;;;;;;;AAAA;AACA;;;AAEO,eAAe;IACpB,IAAI;QACF,MAAM,SAAS,MAAM,6IAAc,CAAC,SAAS;QAC7C,OAAO,gJAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,0CAA0C;QACxD,OAAO,gJAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAAwC,GACjD;YAAE,QAAQ;QAAI;IAElB;AACF;AAEO,eAAe,KAAK,OAAoB;IAC7C,IAAI;QACF,MAAM,OAAO,MAAM,QAAQ,IAAI;QAC/B,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,IAAI,EAAE,GAAG;QAE9C,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM;YAC5B,OAAO,gJAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAA6C,GACtD;gBAAE,QAAQ;YAAI;QAElB;QAEA,MAAM,UAAU,MAAM,6IAAc,CAAC,OAAO,CAAC;YAC3C;YACA;YACA;YACA;QACF;QAEA,OAAO,gJAAY,CAAC,IAAI,CAAC,SAAS;YAAE,QAAQ;QAAI;IAClD,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,kCAAkC;QAChD,OAAO,gJAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAAgC,GACzC;YAAE,QAAQ;QAAI;IAElB;AACF;AAEO,eAAe,IAAI,OAAoB;IAC5C,IAAI;QACF,MAAM,OAAO,MAAM,QAAQ,IAAI;QAC/B,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM,GAAG;QAE5B,IAAI,WAAW,WAAW;YACxB,MAAM,6IAAc,CAAC,YAAY,CAAC,KAAK,OAAO;YAC9C,OAAO,gJAAY,CAAC,IAAI,CAAC;gBAAE,SAAS;YAAK;QAC3C;QAEA,MAAM,EAAE,EAAE,EAAE,GAAG,SAAS,GAAG;QAC3B,IAAI,CAAC,IAAI;YACP,OAAO,gJAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAAkB,GAC3B;gBAAE,QAAQ;YAAI;QAElB;QAEA,MAAM,cAAc,MAAM,6IAAc,CAAC,UAAU,CAAC,IAAI;QACxD,IAAI,CAAC,aAAa;YAChB,OAAO,gJAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAAiB,GAC1B;gBAAE,QAAQ;YAAI;QAElB;QAEA,OAAO,gJAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,kCAAkC;QAChD,OAAO,gJAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAAgC,GACzC;YAAE,QAAQ;QAAI;IAElB;AACF;AAEO,eAAe,OAAO,OAAoB;IAC/C,IAAI;QACF,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,IAAI,QAAQ,GAAG;QAC5C,MAAM,KAAK,aAAa,GAAG,CAAC;QAE5B,IAAI,CAAC,IAAI;YACP,OAAO,gJAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAAkB,GAC3B;gBAAE,QAAQ;YAAI;QAElB;QAEA,MAAM,UAAU,MAAM,6IAAc,CAAC,UAAU,CAAC;QAChD,IAAI,CAAC,SAAS;YACZ,OAAO,gJAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAAiB,GAC1B;gBAAE,QAAQ;YAAI;QAElB;QAEA,OAAO,gJAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAAK;IAC3C,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,kCAAkC;QAChD,OAAO,gJAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAAgC,GACzC;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}